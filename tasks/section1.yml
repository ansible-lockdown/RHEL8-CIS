---
- name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Edit modprob config"
        lineinfile:
            dest: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install cramfs(\\s|$)"
            line: "install cramfs /bin/true"
            create: yes

      - name: "SCORED | 1.1.1.1 | PATCH | Remove cramfs module | Disable cramfs"
        modprobe:
            name: cramfs
            state: absent
        when:
            - ansible_connection != 'docker'
  when:
      - rhel8cis_rule_1_1_1_1
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "NOT SCORED | 1.1.1.2 | PATCH | Ensure mounting of vFAT filesystems is limited"
  block:
      - name: "NOT SCORED | 1.1.1.2 | PATCH | Ensure mounting of vFAT filesystems is limited | Edit modprob config"
        lineinfile:
            dest: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install vfat(\\s|$)"
            line: "install vfat /bin/true"
            create: yes

      - name: "NOT SCORED | 1.1.1.2 | PATCH | Ensure mounting of vFAT filesystems is limited | Disable vFAT"
        modprobe:
            name: vfat
            state: absent
        when:
            - ansible_connection != 'docker'
  when:
      - rhel8cis_rule_1_1_1_2
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.1.2
      - vfat

- name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of squashfs filesystems is disabled | Edit modprob config"
        lineinfile:
            dest: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install squashfs(\\s|$)"
            line: "install squashfs /bin/true"
            create: yes

      - name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of squashfs filesystems is disabled | Disable squashfs"
        modprobe:
            name: squashfs
            state: absent
        when:
            - ansible_connection != 'docker'
  when:
      - rhel8cis_rule_1_1_1_3
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.3
      - squashfs

- name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of udf filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of udf filesystems is disable | Edit modprob config"
        lineinfile:
            dest: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install udf(\\s|$)"
            line: "install udf /bin/true"
            create: yes

      - name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of udf filesystems is disable | Disable udf"
        modprobe:
            name: udf
            state: absent
        when:
            - ansible_connection != 'docker'
  when:
      - rhel8cis_rule_1_1_1_4

  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.4
      - udf

- name: "SCORED | 1.1.2 | PATCH | Ensure /tmp is configured| enable and start/restart tmp.mount"
  block:
      - name: "SCORED | 1.1.2 | PATCH | Ensure /tmp is configured | change mount options in config file for systemd"
        lineinfile:
            path: /etc/selinux/config
            regexp: "^Options=mode"
            line: "Options=mode=1777,strictatime,noexec,nodev,nosuid"

      - name: "SCORED | 1.1.2 | PATCH | Ensure /tmp is configured | enforce systemd enabled service"
        systemd:
            name: tmp.mount
            daemon_reload: yes
            enabled: yes
            masked: no
            state: started
  when:
      - rhel8cis_rule_1_1_2
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.2

- name: |
        "SCORED | 1.1.3 | PATCH | Ensure nodev option set on /tmp partition"
        "SCORED | 1.1.4 | PATCH | Ensure nosuid option set on /tmp partition"
        "SCORED | 1.1.5 | PATCH | Ensure noexec option set on /tmp partition"
  copy:
      src: etc/systemd/system/tmp.mount
      dest: /etc/systemd/system/tmp.mount
      owner: root
      group: root
      mode: 0644
  notify: systemd restart tmp.mount
  when:
      - rhel8cis_rule_1_1_3
      - rhel8cis_rule_1_1_4
      - rhel8cis_rule_1_1_5
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.3
      - rule_1.1.4
      - rule_1.1.5

- name: "SCORED | 1.1.6 | PATCH | Ensure separate partition exists for /var"
  shell: mount | grep "on /var "
  args:
      warn: false
  register: var_mounted
  changed_when: no
  failed_when: no
  when:
      - rhel8cis_rule_1_1_6
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.6
      - skip_ansible_lint

- name: "SCORED | 1.1.7 | PATCH | Ensure separate partition exists for /var/tmp"
  shell: mount | grep "on /var/tmp "
  register: var_tmp_mounted
  changed_when: no
  failed_when: no
  when:
      - rhel8cis_rule_1_1_7
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.7
      - skip_ansible_lint

- name: |
          "SCORED | 1.1.8  | PATCH | Ensure nodev option set on /var/tmp partition |
           SCORED | 1.1.9  | PATCH | Ensure nosuid option set on /var/tmp partition |
           SCORED | 1.1.10 | PATCH | Ensure noexec option set on /var/tmp partition"
  mount:
      name: /var/tmp
      src: "{{ rhel8cis_vartmp['source'] }}"
      state: present
      fstype: "{{ rhel8cis_vartmp['fstype'] }}"
      opts: "{{ rhel8cis_vartmp['opts'] }}"
  when:
      - rhel8cis_vartmp['enabled']
      - rhel8cis_rule_1_1_8
      - rhel8cis_rule_1_1_9
      - rhel8cis_rule_1_1_10
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.8
      - rule_1.1.9
      - rule_1.1.10

- name: "SCORED | 1.1.11 | PATCH | Ensure separate partition exists for /var/log"
  shell: mount | grep "on /var/log "
  register: var_log_mounted
  changed_when: no
  failed_when: no
  when:
      - rhel8cis_rule_1_1_11
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.11
      - skip_ansible_lint

- name: "SCORED | 1.1.12 | PATCH | Ensure separate partition exists for /var/log/audit"
  shell: mount | grep "on /var/log/audit "
  register: var_log_audit_mounted
  changed_when: no
  failed_when: no
  when:
      - rhel8cis_rule_1_1_12
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.12
      - skip_ansible_lint

- name: "SCORED | 1.1.13 | PATCH | Ensure separate partition exists for /home"
  shell: mount | grep "on /home"
  register: home_mounted
  changed_when: no
  failed_when: no
  when:
      - rhel8cis_rule_1_1_13
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.13
      - skip_ansible_lint

- name: "SCORED | 1.1.14 | PATCH | Ensure nodev option set on /home partition"
  mount:
      name: "/home"
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "nodev"
  when:
      - rhel8cis_rule_1_1_14
      - item.mount == "/home"
  with_items: "{{ ansible_mounts }}"
  tags:
      - level1
      - patch
      - rule_1.1.14

- name: |
         "SCORED | 1.1.15 | PATCH | Ensure nodev option set on /dev/shm partition |
          SCORED | 1.1.16 | PATCH | Ensure nosuid option set on /dev/shm partition |
          SCORED | 1.1.17 | PATCH | Ensure noexec option set on /dev/shm partition"
  mount:
      name: /dev/shm
      src: tmpfs
      state: mounted
      fstype: tmpfs
      opts: "defaults,nodev,nosuid,noexec"
  when:
      - rhel8cis_rule_1_1_15
      - rhel8cis_rule_1_1_16
      - rhel8cis_rule_1_1_17
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.15
      - rule_1.1.16
      - rule_1.1.17

- name: "NOTSCORED | 1.1.18 | PATCH | Ensure nodev option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: no
  when:
      - rhel8cis_rule_1_1_18
  tags:
      - level1
      - notscored
      - patch
      - rule_1.1.18

- name: "NOTSCORED | 1.1.19 | PATCH | Ensure nosuid option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: no
  when:
      - rhel8cis_rule_1_1_19
  tags:
      - level1
      - notscored
      - patch
      - rule_1.1.19

- name: "NOTSCORED | 1.1.20 | PATCH | Ensure noexec option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: no
  when:
      - rhel8cis_rule_1_1_20
  tags:
      - level1
      - notscored
      - patch
      - rule_1.1.20

- name: "SCORED | 1.1.21 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2>/dev/null | xargs chmod a+t
  changed_when: no
  failed_when: no
  # when: sticky_bit_on_worldwritable_dirs_audit.rc == '0'
  when:
      - rhel8cis_rule_1_1_21
  tags:
      - level1
      - patch
      - rule_1.1.21

- name: "SCORED | 1.1.22 | PATCH | Disable Automounting"
  service:
      name: autofs
      enabled: no
  when:
      - not rhel8cis_allow_autofs
      - autofs_service_status.stdout == "loaded"
      - rhel8cis_rule_1_1_22
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.22

- name: "SCORED | 1.1.23 | PATCH | Disable USB Storage"
  block:
      - name: "SCORED | 1.1.23 | PATCH | Disable USB Storage | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install usb-storage(\\s|$)"
            line: "install usb-storage /bin/true"
            create: yes
      - name: "SCORED | 1.1.23 | PATCH | Disable USB Storage | Edit modprobe config"
        modprobe:
            name: usb-storage
            state: absent
  when:
      - rhel8cis_rule_1_1_23
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.23

- name: "NOTSCORED | 1.2.1 | PATCH | Ensure Red Hat Subscription Manager connection is configured"
  command: subscription-manager register
  changed_when: no
  failed_when: no
  when:
      - ansible_distribution == "RedHat"
      - rhel8cis_rule_1_2_1
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.1

- name: "NOTSCORED | 1.2.2 | PATCH | Disable the rhnsd Daemon"
  service:
      name: rhnsd
      state: stopped
      enabled: no
  when:
      - ansible_distribution == "RedHat" and rhnsd_service_status.stdout == "loaded" and not rhel8cis_rhnsd_required
      - rhel8cis_rule_1_2_2
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.2

- name: "NOTSCORED | 1.2.3 | PATCH | Ensure GPG keys are configured"
  command: gpg --quiet --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-{{ ansible_distribution|lower }}-release
  when:
      - rhel8cis_rule_1_2_3
      - ansible_distribution == "RedHat"
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.3

- name: "SCORED | 1.2.4 | PATCH | Ensure gpgcheck is globally activated"
  block:
      - name: "SCORED | 1.2.4 | PATCH | Ensure gpgcheck is globally activated | Find repos"
        find:
            paths: /etc/yum.repos.d
            patterns: "*.repo"
        register: yum_repos
        changed_when: no

      - name: "SCORED | 1.2.4 | PATCH | Ensure gpgcheck is globally activated | Update yum.repos"
        replace:
            name: "{{ item.path }}"
            regexp: "^gpgcheck=0"
            replace: "gpgcheck=1"
        with_items:
            - "{{ yum_repos.files }}"
  when:
      - rhel8cis_rule_1_2_4
  tags:
      - level1
      - scored
      - patch
      - rule_1.2.4

- name: "NOTSCORED | 1.2.5 | PATCH | Ensure package manager repositories are configured"
  command: dnf repolist
  args:
      warn: false
  register: dnf_configured
  changed_when: no
  failed_when: no
  when:
      - rhel8cis_rule_1_2_5
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.5
      - skip_ansible_lint

- name: "SCORED | 1.3.1 | PATCH | Ensure sudo is installed"
  dnf:
      name: sudo
      state: present
  become: true
  when:
      - rhel8cis_rule_1_3_1
  tags:
      - level1
      - scored
      - sudo
      - patch
      - rule_1.3.1

- name: "SCORED | 1.3.2 | PATCH | Ensure sudo commands use pty"
  lineinfile:
      dest: /etc/sudoers
      regexp: ^Defaults
      line: "Defaults    use_pty"
      state: present
  become: true
  when:
      - rhel8cis_rule_1_3_2
  tags:
      - level1
      - scored
      - patch
      - rule_1.3.2

- name: "SCORED | 1.3.3 | PATCH | Ensure sudo log file exists"
  lineinfile:
      dest: /etc/sudoers
      regexp: ^Defaults
      line: 'Defaults    logfile="{{ rhel8cis_varlog_location }}"'
      state: present
  become: true
  when:
      - rhel8cis_rule_1_3_1
  tags:
      - level1
      - scored
      - patch
      - rule_1.3.3

- name: "SCORED | 1.4.1 | PATCH | Ensure AIDE is installed"
  block:
      - name: "SCORED | 1.4.1 | PATCH | Ensure AIDE is installed | Install AIDE"
        dnf:
            name: aide
            state: present

      - name: "SCORED | 1.4.1 | PATCH | Ensure AIDE is installed | Configure AIDE"
        command: /usr/sbin/aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'
        args:
            creates: /var/lib/aide/aide.db.gz
        changed_when: no
        failed_when: no
        async: "{{ ansible_check_mode | ternary(0, 45) }}"
        poll: 0
  when:
      - rhel8cis_config_aide
      - rhel8cis_rule_1_4_1
  tags:
      - level1
      - scored
      - aide
      - patch
      - rule_1.4.1

- name: "SCORED | 1.4.2 | PATCH | Ensure filesystem integrity is regularly checked"
  cron:
      name: Run AIDE integrity check
      cron_file: "{{ rhel8cis_aide_cron['cron_file'] }}"
      user: "{{ rhel8cis_aide_cron['cron_user'] }}"
      minute: "{{ rhel8cis_aide_cron['aide_minute'] | default('0') }}"
      hour: "{{ rhel8cis_aide_cron['aide_hour'] | default('5') }}"
      day: "{{ rhel8cis_aide_cron['aide_day'] | default('*') }}"
      month: "{{ rhel8cis_aide_cron['aide_month'] | default('*') }}"
      weekday: "{{ rhel8cis_aide_cron['aide_weekday'] | default('*') }}"
      job: "{{ rhel8cis_aide_cron['aide_job'] }}"
  when:
      - rhel8cis_rule_1_4_2
  tags:
      - level1
      - scored
      - aide
      - file_integrity
      - patch
      - rule_1.4.2

- name: "SCORED | 1.5.1 | PATCH | Ensure permissions on bootloader config are configured"
  block:
      - name: "SCORED | 1.5.1 | AUDIT | Ensure permissions on bootloader config are configured | Get grub config settings"
        stat:
            path: /etc/grub2.cfg
        register: grub_cfg
        changed_when: no

      - name: "SCORED | 1.5.1 | PATCH | Ensure permissions on bootloader config are configured | Update grub config settings"
        file:
            path: "{{ grub_cfg.stat.lnk_source }}"
            owner: root
            group: root
            mode: 0600
        when:
            - grub_cfg.stat.exists and grub_cfg.stat.islnk
  when:
      - rhel8cis_rule_1_4_1
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.5.1

- name: "SCORED | 1.5.2 | PATCH | Ensure bootloader password is set"
  block:
      - name: "SCORED | 1.5.2 | PATCH | Ensure bootloader password is set | Set random pw to bootloader"
        grub_crypt:
            password: "{{ rhel8cis_bootloader_password }}"
        register: grub_pass

      - name: "SCORED | 1.5.2 | PATCH | Ensure bootloader password is set"
        copy:
            dest: /boot/grub2/user.cfg
            content: "GRUB2_PASSWORD={{ grub_pass.passhash }}"
        notify: generate new grub config
  when:
      - rhel8cis_set_boot_pass
      - grub_pass is defined and grub_pass.passhash is defined and grub_pass.passhash != ''
      - rhel8cis_rule_1_5_2
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.5.2

- name: "NOTSCORED | 1.5.3 | PATCH | Ensure authentication required for single user mode"
  block:
      - name: "NOTSCORED | 1.5.3 | PATCH | Ensure authentication required for single user mode | Emergency service"
        lineinfile:
            dest: /usr/lib/systemd/system/emergency.service
            regexp: '/sbin/sulogin'
            line: 'ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency'

      - name: "NOTSCORED | 1.5.3 | PATCH | Ensure authentication required for single user mode | Rescue service"
        lineinfile:
            dest: /usr/lib/systemd/system/rescue.service
            regexp: '/sbin/sulogin'
            line: 'ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue'
  when:
      - rhel8cis_rule_1_5_3
      - ansible_distribution_major_version == 8
  tags:
      - level1
      - patch
      - rule_1.5.3

- name: "SCORED | 1.6.1 | PATCH | Ensure core dumps are restricted"
  block:
      - name: "SCORED | 1.6.1 | PATCH | Ensure core dumps are restricted | Update limits.conf file"
        lineinfile:
            state: present
            dest: /etc/security/limits.conf
            regexp: '^#?\\*.*core'
            line: '*                hard    core            0'
            insertbefore: '^# End of file'

      - name: "SCORED | 1.6.1 | PATCH | Ensure core dumps are restricted | Set active kernel parameter"
        sysctl:
            name: fs.suid_dumpable
            value: '0'
            state: present
            reload: yes
            sysctl_set: yes
            ignoreerrors: yes
  when:
      - rhel8cis_rule_1_6_1
  tags:
      - level1
      - scored
      - sysctl
      - patch
      - rule_1.6.1

- name: "SCORED | 1.6.2 | PATCH | Ensure address space layout randomization (ASLR) is enabled"
  sysctl:
      name: kernel.randomize_va_space
      value: '2'
      state: present
      reload: yes
      sysctl_set: yes
      ignoreerrors: yes
  when:
      - rhel8cis_rule_1_6_2
  tags:
      - level1
      - scored
      - patch
      - rule_1.6.2

- name: "SCORED | 1.7.1.1 | PATCH | Ensure SELinux is installed"
  dnf:
      name: libselinux
      state: present
  when:
      - rhel8cis_rule_1_7_1_1
  tags:
      - level2
      - scored
      - patch
      - rule_1.7.1.1

- name: "SCORED | 1.7.1.2 | PATCH | Ensure SELinux is not disabled in bootloader configuration"
  replace:
      dest: /etc/default/grub
      regexp: '(selinux|enforcing)\s*=\s*0\s*'
      follow: yes
  register: selinux_grub_patch
  ignore_errors: yes
  notify: generate new grub config
  when:
      - rhel8cis_rule_1_7_1_2
  tags:
      - level2
      - scored
      - patch
      - rule_1.7.1.2

- name: "SCORED | 1.7.1.3 | PATCH | Ensure SELinux policy is configured"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel8cis_selinux_pol }}"
      state: enforcing
  when:
      - not rhel8cis_selinux_disable
      - rhel8cis_rule_1_7_1_3
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.7.1.3

- name: "SCORED | 1.7.1.4 | PATCH | Ensure the SELinux state is enforcing"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel8cis_selinux_pol }}"
      state: enforcing
  when:
      - not rhel8cis_selinux_disable
      - rhel8cis_rule_1_7_1_4
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.7.1.4

- name: "SCORED | 1.7.1.5 | AUDIT | Ensure no unconfined daemons exist"
  block:
      - name: "SCORED | 1.7.1.5 | AUDIT | Ensure no unconfined daemons exist | Find the unconfined daemons"
        shell: ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ':' ' ' | awk '{ print $NF }'
        register: rhelcis_1_7_1_5_unconf_daemons
        failed_when: no
        changed_when: no
      - name: "SCORED | 1.7.1.5 | AUDIT | Ensure no unconfined daemons exist | Message on no unconfined daemones"
        debug:
            msg: "Good News! There are no unconfined daemons found on your system"
        when: rhelcis_1_7_1_5_unconf_daemons.stdout == ""

      - name: "SCORED | 1.7.1.5 | AUDIT | Ensure no unconfined daemons exist | Message on unconfined daemones"
        debug:
            msg: "Warning! You have unconfined daemons: {{ rhelcis_1_7_1_5_unconf_daemons.stdout_lines }}"
        when: rhelcis_1_7_1_5_unconf_daemons.stdout != ""
  when:
      - rhel8cis_rule_1_7_1_5
  tags:
      - level2
      - audit
      - rule_1.7.1.5

- name: "SCORED | 1.7.1.6 | PATCH | Ensure SETroubleshoot is not installed"
  dnf:
      name: setroubleshoot
      state: absent
  when:
      - rhel8cis_rule_1_7_1_6
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.7.1.6

- name: "SCORED | 1.7.1.7 | PATCH | Ensure the MCS Translation Service (mcstrans) is not installed"
  dnf:
      name: mcstrans
      state: absent
  when:
      - rhel8cis_rule_1_7_1_7
  tags:
      - level2
      - scored
      - patch
      - rule_1.7.1.7

- name: "SCORED | 1.8.1.1 | PATCH | Ensure message of the day is configured properly"
  template:
      src: etc/motd.j2
      dest: /etc/motd
  when:
      - rhel8cis_rule_1_8_1_1
  tags:
      - level1
      - banner
      - patch
      - rule_1.8.1.1

- name: "SCORED | 1.8.1.2 | PATCH | Ensure local login warning banner is configured properly"
  template:
      src: etc/issue.j2
      dest: /etc/issue
  when:
      - rhel8cis_rule_1_8_1_2
  tags:
      - level1
      - patch
      - rule_1.8.1.2

- name: "SCORED | 1.8.1.3 | PATCH | Ensure remote login warning banner is configured properly"
  template:
      src: etc/issue.net.j2
      dest: /etc/issue.net
  when:
      - rhel8cis_rule_1_8_1_3
  tags:
      - level1
      - banner
      - patch
      - rule_1.8.1.3

- name: "SCORED | 1.8.1.4 | PATCH | Ensure permissions on /etc/motd are configured"
  file:
      dest: /etc/motd
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_1_8_1_4
  tags:
      - level1
      - perms
      - patch
      - rule_1.8.1.4

- name: "SCORED | 1.8.1.5 | PATCH | Ensure permissions on /etc/issue are configured"
  file:
      dest: /etc/issue
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_1_8_1_5
  tags:
      - level1
      - perms
      - patch
      - rule_1.8.1.5

- name: "NOTSCORED | 1.8.1.6 | PATCH | Ensure permissions on /etc/issue.net are configured"
  file:
      dest: /etc/issue.net
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - rhel8cis_rule_1_8_1_6
  tags:
      - level1
      - perms
      - patch
      - rule_1.8.1.6

- name: "SCORED | 1.8.2 | PATCH | Ensure GDM login banner is configured"
  lineinfile:
      dest: "{{ item.file }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      state: present
      create: yes
      owner: root
      group: root
      mode: 0644
  with_items:
      - { file: '/etc/dconf/profile/gdm', regexp: 'user-db', line: 'user-db:user' }
      - { file: '/etc/dconf/profile/gdm', regexp: 'system-db', line: 'system-db:gdm' }
      - { file: '/etc/dconf/profile/gdm', regexp: 'file-db', line: 'file-db:/usr/share/gdm/greeter-dconf-defaults' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp: '\[org\/gnome\/login-screen\]', line: '[org/gnome/login-screen]' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp: 'banner-message-enable', line: 'banner-message-enable=true' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp: 'banner-message-text', line: "banner-message-text='{{ rhel8cis_warning_banner }}' " }
  when:
      - rhel8cis_gui
      - rhel8cis_rule_1_8_2
  tags:
      - level1
      - level2
      - patch
      - rule_1.8.2

- name: "SCORED | 1.9 | PATCH | Ensure updates, patches, and additional security software are installed"
  dnf:
      name: "*"
      state: latest
  when:
      - rhel8cis_rule_1_9
      - not system_is_ec2
  tags:
      - level1
      - patch
      - rule_1.9
      - skip_ansible_lint

- name: "SCORED | 1.10 | PATCH | Ensure system-wide crypto policy is not legacy"
  block:
      - name: "SCORED | 1.10 | PATCH | Ensure system-wide crypto policy is not legacy | Set crypto policy"
        shell: update-crypto-policies --set "{{ rhel8cis_crypto_policy }}"
        become: true

      - name: "SCORED | 1.10 | PATCH | Ensure system-wide crypto policy is not legacy | Activate crypto policy"
        shell: update-crypto-policies
        become: true
  when:
      - rhel8cis_rule_1_10
  tags:
      - level1
      - patch
      - rule_1.10

- name: "SCORED | 1.11 | PATCH | Ensure system-wide crypto policy is FUTURE or FIPS"
  block:
      - name: "SCORED | 1.11 | PATCH | Ensure system-wide crypto policy is FUTURE or FIPS| Set crypto policy"
        shell: update-crypto-policies --set "{{ rhel8cis_crypto_policy }}"
        become: true

      - name: "SCORED | 1.11 | PATCH | Ensure system-wide crypto policy is FUTURE or FIPS | Activate crypto policy"
        shell: update-crypto-policies
        become: true
  when:
      - rhel8cis_rule_1_11
  tags:
      - level2
      - patch
      - rule_1.11
