---

- name: "1.3.1 | PATCH | Ensure bootloader password is set"
  ansible.builtin.copy:
      dest: "{{ rhel8cis_boot_path }}user.cfg"  # noqa template-instead-of-copy
      content: "GRUB2_PASSWORD={{ rhel8cis_bootloader_password_hash }}"
      owner: root
      group: root
      mode: '0600'
  notify: Rebuild_grub
  when:
      - rhel8cis_set_boot_pass
      - rhel8cis_rule_1_3_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - grub
      - patch
      - NIST800-53R5_AC-3
      - NIST800-53R5_MP-2
      - rule_1.3.1

- name: "1.3.2 | PATCH | Ensure permissions on bootloader config are configured"
  when:
      - rhel8cis_rule_1_3_2
      - discovered_grub_cfg.stat.exists
      - discovered_grub_cfg.stat.islnk
  tags:
      - level1-server
      - level1-workstation
      - automated
      - grub
      - patch
      - NIST800-53R5_AC-3
      - NIST800-53R5_MP-2
      - rule_1.3.2
  block:
      - name: "1.3.2 | PATCH | Ensure permissions on bootloader config are configured | BIOS"
        when: rhel8cis_legacy_boot
        ansible.builtin.file:
            path: "{{ rhel8cis_boot_path }}"
            owner: root
            group: root
            mode: '0600'
            recurse: true

      - name: "1.3.2 | PATCH | Ensure permissions on bootloader config are configured | EFI"
        when: not rhel8cis_legacy_boot
        ansible.builtin.file:
            path: "{{ rhel8cis_boot_path }}"
            owner: root
            group: root
            mode: '0700'
            recurse: true

      - name: "1.3.2 | PATCH | Ensure permissions on bootloader config are configured | UEFI"
        when:
            - not rhel8cis_legacy_boot
            - item.mount == "/boot/efi"
        notify: Change_requires_reboot
        ansible.posix.mount:
            name: /boot/efi
            src: "UUID={{ item.uuid }}"
            fstype: vfat
            state: present
            opts: defaults,umask=0027,fmask=0077,uid=0,gid=0
            passno: '0'
        loop: "{{ ansible_facts.mounts }}"
        loop_control:
            label: "{{ item.mount }}"
